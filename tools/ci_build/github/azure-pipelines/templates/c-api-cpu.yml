parameters:
- name: RunOnnxRuntimeTests
  displayName: Run Tests?
  type: boolean
  default: true

- name: DoCompliance
  displayName: Run Compliance Tasks?
  type: boolean
  default: true

- name: PublishingNuget
  displayName: Publishing Nuget Packages and report binary size to mysql
  type: boolean
  default: true

- name: DoEsrp
  displayName: Run code sign tasks? Must be true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

- name: IsReleaseBuild
  displayName: Is a release build? Set it to true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

- name: AdditionalWinBuildFlags
  displayName: Additional build flags that just for Windows Builds
  type: string
  default: ''

- name: OrtNugetPackageId
  displayName: Package name for nuget
  type: string
  default: 'Microsoft.ML.OnnxRuntime'

- name: BuildVariant
  type: string
  default: 'openmp'

jobs:
- job: Nodejs_Packaging_CPU
  workspace:
    clean: all
  pool: 'Win-CPU-2021'
  variables:
    breakCodesignValidationInjection: ${{ parameters.DoEsrp }}
  # dependsOn:
  # - Linux_C_API_Packaging_CPU_x64
  # - MacOS_C_API_Packaging_CPU_x64
  # - Windows_Packaging_CPU_x64_${{ parameters.BuildVariant }}
  # - Windows_Packaging_CPU_arm64_${{ parameters.BuildVariant }}
  # condition: succeeded()
  steps:
  - checkout: self
    submodules: true
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet (Win x64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'onnxruntime-win-x64'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet (Win ARM64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'onnxruntime-win-arm64'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet (OSX)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'onnxruntime-osx'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet (Linux x64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'onnxruntime-linux-x64'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet (Linux aarch64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'onnxruntime-linux-aarch64'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Nodejs (Win x64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'drop-onnxruntime-nodejs-win-x64'
      targetPath: '$(Build.BinariesDirectory)/nodejs-artifacts/win32/x64/'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Nodejs (Win ARM64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'drop-onnxruntime-nodejs-win-arm64'
      targetPath: '$(Build.BinariesDirectory)/nodejs-artifacts/win32/arm64/'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Nodejs (Linux x64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'drop-onnxruntime-nodejs-linux-x64'
      targetPath: '$(Build.BinariesDirectory)/nodejs-artifacts/linux/x64/'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - Nodejs (Linux aarch64)'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'drop-onnxruntime-nodejs-linux-aarch64'
      targetPath: '$(Build.BinariesDirectory)/nodejs-artifacts/linux/arm64/'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet'
    inputs:
      # --test--begin--
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 940
      buildVersionToDownload: specific
      pipelineId: 180746
      # --test--end--
      artifactName: 'drop-extra'
      targetPath: '$(Build.BinariesDirectory)/extra-artifact'

  - task: PowerShell@2
    displayName: 'PowerShell Script'
    inputs:
      targetType: filePath
      filePath: $(Build.SourcesDirectory)\tools\ci_build\github\windows\extract_nuget_files.ps1

  - script: |
     dir
    workingDirectory: '$(Build.BinariesDirectory)/nuget-artifact'
    displayName: 'List artifacts'

  - script: |
     npm ci
    workingDirectory: '$(Build.SourcesDirectory)/js'
    displayName: 'Install NPM packages /js'
  - script: |
     npm ci
    workingDirectory: '$(Build.SourcesDirectory)/js/common'
    displayName: 'Install NPM packages /js/common'
  - script: |
     npm ci
    workingDirectory: '$(Build.SourcesDirectory)/js/node'
    displayName: 'Install NPM packages /js/node'

  # Node.js binding win32/x64
  - task: CopyFiles@2
    displayName: 'Copy nuget binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\x64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\nuget-artifacts\onnxruntime-win-x64\lib'
      Contents: '*.dll'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\x64'
  - task: CopyFiles@2
    displayName: 'Copy nodejs binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\x64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\nodejs-artifacts\win32\x64'
      Contents: '*.node'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\x64'

  # Node.js binding win32/arm64
  - task: CopyFiles@2
    displayName: 'Copy nuget binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\arm64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\nuget-artifacts\onnxruntime-win-arm64\lib'
      Contents: '*.dll'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\arm64'
  - task: CopyFiles@2
    displayName: 'Copy nodejs binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\arm64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\nodejs-artifacts\win32\arm64'
      Contents: '*.node'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\win32\arm64'

  # Node.js binding linux/x64
  - task: CopyFiles@2
    displayName: 'Copy nuget binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\x64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\nuget-artifacts\onnxruntime-linux-x64\lib'
      Contents: 'libonnxruntime.so.*'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\x64'
  - task: CopyFiles@2
    displayName: 'Copy nodejs binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\x64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\nodejs-artifacts\linux\x64'
      Contents: '*.node'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\x64'

  # Node.js binding linux/arm64
  - task: CopyFiles@2
    displayName: 'Copy nuget binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\arm64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\nuget-artifacts\onnxruntime-linux-aarch64\lib'
      Contents: 'libonnxruntime.so.*'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\arm64'
  - task: CopyFiles@2
    displayName: 'Copy nodejs binaries to: $(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\arm64\'
    inputs:
      SourceFolder: '$(Build.BinariesDirectory)\nodejs-artifacts\linux\arm64'
      Contents: '*.node'
      TargetFolder: '$(Build.SourcesDirectory)\js\node\bin\napi-v3\linux\arm64'

  - script: |
     node $(Build.SourcesDirectory)\tools\ci_build\github\js\generate-npm-package-dev-version.js
    displayName: 'generate @dev package version'
    condition: and(succeeded(), eq('${{ parameters.IsReleaseBuild}}', false))

  - script: |
     npm version $(NpmPackageVersionNumber)
     echo.$(Build.SourceVersion)>__commit.txt
    displayName: 'Bump @dev version for onnxruntime-common'
    workingDirectory: '$(Build.SourcesDirectory)/js/common'
    condition: and(succeeded(), eq('${{ parameters.IsReleaseBuild}}', false))

  - script: |
     npm version $(NpmPackageVersionNumber)
     echo.$(Build.SourceVersion)>__commit.txt
    displayName: 'Bump @dev version for onnxruntime-node'
    workingDirectory: '$(Build.SourcesDirectory)/js/node'
    condition: and(succeeded(), eq('${{ parameters.IsReleaseBuild}}', false))

  - script: |
     npm pack
    workingDirectory: '$(Build.SourcesDirectory)/js/common'
    displayName: 'npm pack /js/common'
  
  # TODO: check if we can skip onnxruntime-common

  - script: |
     npm pack
    workingDirectory: '$(Build.SourcesDirectory)/js/node'
    displayName: 'npm pack /js/node'

  - task: CopyFiles@2
    displayName: 'Copy onnxruntime-common package to staging directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/js/common/'
      Contents: 'onnxruntime-common-*.tgz'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: CopyFiles@2
    displayName: 'Copy onnxruntime-node package to staging directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/js/node/'
      Contents: 'onnxruntime-node-*.tgz'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish NPM packages files'
    inputs:
      artifactName: 'NPM_packages'
      targetPath: '$(Build.ArtifactStagingDirectory)'

  - template: component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()

- template: ../nodejs/templates/test_win.yml
  parameters:
    AgentPool : 'Win-CPU-2021'
    JobSuffix : 'Win_CPU_x64'

- template: ../nodejs/templates/test_posix.yml
  parameters:
    AgentPool : 'Linux-CPU'
    JobSuffix : 'Linux_CPU_x64'

# - template: ../nodejs/templates/test_posix.yml
#   parameters:
#     AgentPool : 'macOS-11'
#     JobSuffix : 'macOS_CPU_x64'
